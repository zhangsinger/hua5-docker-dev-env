version: "3"
services:
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: nginx:${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default
      # 可以把-default 改成下列配置，以固定容器IP
      #default:
      #  ipv4_address: 10.0.0.10

  # php7:
  #   build:
  #     context: ./services/php7
  #     args:
  #       PHP_VERSION: php:${PHP7_VERSION}-fpm-alpine
  #       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #       PHP_EXTENSIONS: ${PHP7_EXTENSIONS}
  #       TZ: "$TZ"
  #   container_name: php7
  #   image: php7:${PHP7_VERSION}
  #   expose:
  #     - 9501
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #     - ${PHP7_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
  #     - ${PHP7_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
  #     - ${PHP7_LOG_DIR}:/var/log/php
  #     - ${DATA_DIR}/composer:/tmp/composer
  #   restart: always
  #   cap_add:
  #     - SYS_PTRACE
  #   networks:
  #     - default

  php8:
    build:
      context: ./services/php8
      args:
        PHP_VERSION: php:${PHP8_VERSION}-fpm-alpine3.13
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP8_EXTENSIONS}
        TZ: "$TZ"
    container_name: php8
    image: php8:${PHP8_VERSION}
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP8_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP8_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP8_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mysql:
    image: mysql/mysql-server:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  # mysql5:
  #   image: mysql:${MYSQL5_VERSION}
  #   container_name: mysql5
  #   ports:
  #     - "${MYSQL5_HOST_PORT}:3306"
  #   volumes:
  #     - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
  #     - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
  #   restart: always
  #   networks:
  #     - default
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
  #     TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  # nacos:
  #   image: nacos/nacos-server:${NACOS_VERSION}
  #   container_name: nacos
  #   ports:
  #     - "${NACOS_HOST_PORT}:8848"
  #     - "${NACOS_HOST_PORT_A}:9848"
  #     - "${NACOS_HOST_PORT_B}:9849"
  #   volumes:
  #     - ${NACOS_CONF_DIR}:/home/nacos/conf:rw
  #   restart: always
  #   environment:
  #     TZ: "$TZ"
  #     MODE: standalone
  #   networks:
  #     - default

  # sentinel:
  #   image: superdowell/sentinel-dashboard:${SENTINEL_VERSION}
  #   container_name: sentinel
  #   ports:
  #     - "${SENTINEL_HOST_PORT}:8081"
  #   restart: always
  #   environment:
  #     TZ: "$TZ"
  #   networks:
  #     - default

  # seata:
  #   image: fancyfong/seata:${SEATA_VERSION}
  #   container_name: seata
  #   ports:
  #     - "${SEATA_HOST_PORT}:8091"
  #   volumes:
  #     - ${SEATA_CONF_FILE}:/seata-server/resources/file.conf:rw
  #     - ${SEATA_CONF_REGISTRY}:/seata-server/resources/registry.conf:rw
  #   environment:
  #     - TZ=Asia/Shanghai
  #   restart: always
  #   networks:
  #     - default

  # zipkin:
  #   image: openzipkin/zipkin:${ZIPKIN_VERSION}
  #   container_name: zipkin
  #   ports:
  #     - "${ZIPKIN_HOST_PORT}:9411"
  #   environment:
  #     - TZ=Asia/Shanghai
  #   restart: always
  #   networks:
  #     - default

  # memcached:
  #   image: memcached:${MEMCACHED_VERSION}
  #   container_name: memcached
  #   ports:
  #     - "${MEMCACHED_HOST_PORT}:11211"
  #   environment:
  #       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
  #   networks:
  #     - default

  # rabbitmq:
  #   build:
  #     context: ./services/rabbitmq
  #     args:
  #       RABBITMQ_VERSION: ${RABBITMQ_VERSION}
  #       RABBITMQ_PLUGINS: ${RABBITMQ_PLUGINS}
  #   container_name: rabbitmq
  #   image: rabbitmq:${RABBITMQ_VERSION}
  #   restart: always
  #   ports:
  #     - "${RABBITMQ_HOST_PORT_C}:5672"
  #     - "${RABBITMQ_HOST_PORT_S}:15672"
  #   environment:
  #       TZ: "$TZ"
  #       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
  #       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
  #   networks:
  #         - default

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   container_name: mongodb
  #   environment:
  #       MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
  #       MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
  #       TZ: "$TZ"
  #   volumes:
  #     - ${DATA_DIR}/mongo:/data/db:rw
  #     - ${DATA_DIR}/mongo_key:/mongo:rw
  #   ports:
  #       - "${MONGODB_HOST_PORT}:27017"
  #   networks:
  #       - default
  #   command:
  #       --auth

  # elastic-master:
  #   container_name: elastic-master
  #   hostname: elastic-master
  #   image: elasticsearch:${ELASTICSEARCH_VERSION}
  #   restart: always
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   volumes:
  #     - ${ELASTICSEARCH_CONF_PATH}/elastic-master.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ${DATA_DIR}/elasticsearch/master:/usr/share/elasticsearch/data
  #     - ${ELASTICSEARCH_LOG_PATH}/master:/usr/share/elasticsearch/logs
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  # elastic-slave1:
  #   container_name: elastic-slave1
  #   image: elasticsearch:${ELASTICSEARCH_VERSION}
  #   restart: always
  #   ports:
  #     - 9201:9200
  #     - 9301:9300
  #   volumes:
  #     - ${ELASTICSEARCH_CONF_PATH}/elastic-slave1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ${DATA_DIR}/elasticsearch/slave1:/usr/share/elasticsearch/data
  #     - ${ELASTICSEARCH_LOG_PATH}/slave1:/usr/share/elasticsearch/logs
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  # elastic-slave2:
  #   container_name: elastic-slave2
  #   image: elasticsearch:${ELASTICSEARCH_VERSION}
  #   restart: always
  #   ports:
  #     - 9202:9200
  #     - 9302:9300
  #   volumes:
  #     - ${ELASTICSEARCH_CONF_PATH}/elastic-slave2.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ${DATA_DIR}/elasticsearch/slave2:/usr/share/elasticsearch/data
  #     - ${ELASTICSEARCH_LOG_PATH}/slave2:/usr/share/elasticsearch/logs
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  # kibana:
  #   container_name: kibana
  #   hostname: kibana
  #   image: kibana:${KIBANA_VERSION}
  #   restart: always
  #   ports:
  #     - "${KIBANA_HOST}:5601"
  #   volumes:
  #     - ${KIBANA_CONF_FILE}:/usr/share/kibana/config/kibana.yml
  #   environment:
  #     - elasticsearch.hosts=http://elastic-master:9200
  #   depends_on:
  #     - elastic-master
  #     - elastic-slave1
  #     - elastic-slave2

  # filebeat:
  #   container_name: filebeat
  #   hostname: filebeat
  #   image: docker.elastic.co/beats/filebeat:7.17.3
  #   restart: always
  #   volumes:
  #     - ./services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - ./logs/filebeat/elk_logs:/home/project/elk/logs
  #     - ./logs/filebeat/filebeat_logs:/usr/share/filebeat/logs
  #     - ${DATA_DIR}/filebeat:/usr/share/filebeat/data
  #   # 将指定容器连接到当前连接，可以设置别名，避免ip方式导致的容器重启动态改变的无法连接情况
  #   links:
  #     - logstash
  #   ports:
  #     - 9000:9000
  #   # 依赖服务[可无]
  #   depends_on:
  #     - elastic-master
  #     - elastic-slave1
  #     - elastic-slave2

  # logstash:
  #   container_name: logstash
  #   hostname: logstash
  #   image: logstash:${LOGSTASH_VERSION}
  #   command: logstash -f ./conf/logstash-filebeat.conf
  #   restart: always
  #   volumes:
  #     # 映射到容器中
  #     - ./services/logstash/conf/logstash-filebeat.conf:/usr/share/logstash/conf/logstash-filebeat.conf
  #     - ./services/logstash/conf/logstash.yml:/usr/share/logstash/config/logstash.yml
  #   ports:
  #     - 5044:5044
  #   depends_on:
  #     - elastic-master
  #     - elastic-slave1
  #     - elastic-slave2

  # node:
  #   image: node:${NODE_VERSION}
  #   environment:
  #     - NODE_ENV=production
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #   expose:
  #     - "8081"
  #   networks:
  #     - default
  #   stdin_open: true
  #   tty: true


  # supervisor:
  #   build:
  #     context: ./services/supervisor
  #     args:
  #       ALPINE_VERSION: alpine:${ALPINE_VERSION}
  #       TZ: "$TZ"
  #       CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #   container_name: supervisor
  #   image: supervisor:${ALPINE_VERSION}
  #   ports:
  #     - "${SUPERVISOR_HOST_PORT_C}:9001"
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #     - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
  #     - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
  #     - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       supervisord -n -c /etc/supervisor/supervisord.conf
  #   restart: always
  #   cap_add:
  #     - SYS_PTRACE
  #   networks:
  #     - default

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      # 解除下面的注释可以设置网段，用于nginx等容器固定容器IP
      #config:
      #  - subnet: 10.0.0.0/24
